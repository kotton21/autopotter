[gcode_macro SMARTHOME]
gcode:
    {% if printer.toolhead.homed_axes == "xyz" %}
        M118 Printer is already homed
    {% else %}
        M118 Printer needs homed...
        G28

        ; position minus Z
        G91
        G0 Z-50 F2000
        G90

    {% endif %}


[gcode_macro PROBE_Z_SET_ZERO]
gcode:

  ; Ensure Homed
  SMARTHOME

  ; Position to XY Zero
  G0 X0 Y0 F5000

  ; Do Probe
  G0 Z100 F9000
  PROBE
  G92 Z0
  G0 Z10 F400


[gcode_macro CUSTOM_PAUSE]
# Adjust min_x below to match your printer's X minimum if not zero.
variable_min_x: 0
gcode:
    # Save the current state for resuming
    SAVE_GCODE_STATE

    # Display a message on the printer's screen
    M117 Pausing Print...

    # Switch to relative positioning and move Z up 100mm
    G91
    G0 Z+100; F600
    G90

    # Move to the minimum X position (set via variable_min_x)
    ;G1 X{min_x}; F3000

    # Pause the print. When RESUME is called later, the state is restored.
    PAUSE


[gcode_macro clean_nozzle]
gcode:
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  
  {% set wipe_count = 5 %}
  {% set brush_x = 145 %}
  {% set brush_y = 0 %}
  {% set brush_z = 17 %}
  {% set brush_range_x = 10 %}
  {% set brush_range_y = 20 %}
  
  G91 ; relative
  G0 Z+10 F1000
  G90 ; absolute

  ; save initial positions
  {% set z_pos = printer.toolhead.position.z %} ; save z_position
  {% set x_pos = printer.toolhead.position.x %} ; save z_position
  {% set y_pos = printer.toolhead.position.y %} ; save z_position

  ; move to brush
  G0 X{brush_x} Y{brush_y - brush_range_y} Z{brush_z+10} F4000
  G0 
  G0 F2000
  {% for wipe in range(wipe_count) %}
    G0 Y{brush_y + brush_range_y} Z{brush_z}
    G0 Y{brush_y - brush_range_y} Z{brush_z}
  {% endfor %}
  
  G0 X{brush_x} Y{brush_y} F2000
  {% for wipe in range(wipe_count) %}
    G0 X{brush_x + brush_range_x} Z{brush_z}
    G0 X{brush_x - brush_range_x} Z{brush_z}
  {% endfor %}

  ; move back to initial
  G0 Z{z_pos} F2000
  G0 X{x_pos} Y{y_pos} F4000
  
  RESTORE_GCODE_STATE NAME=clean_nozzle_state
  